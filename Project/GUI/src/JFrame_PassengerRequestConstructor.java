
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import serviceLevel.Session;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Kiker
 */
public class JFrame_PassengerRequestConstructor extends javax.swing.JFrame
{

    private final Session session;
    

    /**
     * Creates new form JFrame_PassengerRequestConstructor
     */
    public JFrame_PassengerRequestConstructor(Session session)
    {
        initComponents();
        this.session = session;
        
    }

    private void updateRequestTable()
    {
        try
        {
            List<Object> res = Utils.getUserService().getAllAvaliableDriverRequests(session);

            DefaultTableModel m = (DefaultTableModel) jTable_driverRequests.getModel();
            m.setRowCount(0);
            for (Object o : res)
            {
                m.addRow((Object[]) o);
            }

        } catch (RemoteException | NotBoundException ex)
        {
            Logger.getLogger(JFrame_main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jButton_accept = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_driverRequests = new javax.swing.JTable();
        jButton_update = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jButton_accept.setText("Accept");
        jButton_accept.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton_acceptActionPerformed(evt);
            }
        });

        jTable_driverRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Creation date", "Parking", "Entry time", "Leave time", "Free spaces left"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jTable_driverRequests.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable_driverRequests);

        jButton_update.setText("Update");
        jButton_update.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton_updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_accept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_update, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_accept, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_updateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_updateActionPerformed
    {//GEN-HEADEREND:event_jButton_updateActionPerformed
        // TODO add your handling code here:

        updateRequestTable();
    }//GEN-LAST:event_jButton_updateActionPerformed

    private void jButton_acceptActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_acceptActionPerformed
    {//GEN-HEADEREND:event_jButton_acceptActionPerformed
        try
        {
            DefaultTableModel m = (DefaultTableModel) jTable_driverRequests.getModel();

            Map<String, Object> map = new HashMap();
            map.put("creationDate", m.getValueAt(
                    jTable_driverRequests.getSelectedRow(), 0));

            Utils.getUserService().createPassengerRequest(session, map);
        } catch (RemoteException | NotBoundException ex)
        {
            Logger.getLogger(JFrame_PassengerRequestConstructor.class.getName()).log(Level.SEVERE, null, ex);
        } finally
        {
            this.dispose();
        }

    }//GEN-LAST:event_jButton_acceptActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_accept;
    private javax.swing.JButton jButton_update;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_driverRequests;
    // End of variables declaration//GEN-END:variables
}
