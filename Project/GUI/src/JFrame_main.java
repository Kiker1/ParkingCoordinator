
import main.ParkingCoordinator;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.plaf.OptionPaneUI;
import javax.swing.table.DefaultTableModel;
import serviceLevel.Session;
import serviceLevel.UserService;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Kiker
 */
public class JFrame_main extends javax.swing.JFrame
{

    private final Session session;
    private final JFrame_login parent;

    /**
     * Creates new form JFrame_main
     */
    public JFrame_main(JFrame_login parent, Session session)
    {
        initComponents();

        this.session = session;
        this.parent = parent;
        System.out.println(parent.isAdmin());
        jButton_createParking.setVisible(parent.isAdmin());
    }

    private void updateRequestTable()
    {
        try
        {
            List<Object> res = Utils.getUserService().getAllRequestsForUser(session);
//            System.out.println(res.size());

            DefaultTableModel m = (DefaultTableModel) jTable_requests.getModel();
            m.setRowCount(0);
            for (Object o : res)
            {
                m.addRow((Object[]) o);
            }

        } catch (RemoteException | NotBoundException ex)
        {
            Logger.getLogger(JFrame_main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_requests = new javax.swing.JTable();
        jButton_createDR = new javax.swing.JButton();
        jButton_createParking = new javax.swing.JButton();
        jButton_removeRequests = new javax.swing.JButton();
        jButton_createPR = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jButton1.setText("Show all requests");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jTable_requests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Type", "Creation Date", "Status", "Enter Time", "Leave Time", "Free Places", "Parking"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jTable_requests.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable_requests);
        if (jTable_requests.getColumnModel().getColumnCount() > 0)
        {
            jTable_requests.getColumnModel().getColumn(0).setMinWidth(130);
            jTable_requests.getColumnModel().getColumn(1).setMinWidth(150);
            jTable_requests.getColumnModel().getColumn(2).setMinWidth(100);
        }

        jButton_createDR.setText("Create Driver request");
        jButton_createDR.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton_createDRActionPerformed(evt);
            }
        });

        jButton_createParking.setText("Create new parking");
        jButton_createParking.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton_createParkingActionPerformed(evt);
            }
        });

        jButton_removeRequests.setText("Remove selected requests");
        jButton_removeRequests.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton_removeRequestsActionPerformed(evt);
            }
        });

        jButton_createPR.setText("Create Passenger request");
        jButton_createPR.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton_createPRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_createDR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_createParking, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_removeRequests, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_createPR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_removeRequests)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_createDR, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_createPR, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jButton_createParking, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        updateRequestTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        parent.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void jButton_createDRActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_createDRActionPerformed
    {//GEN-HEADEREND:event_jButton_createDRActionPerformed
        new JFrame_DriverRequestConstructor(this.session).setVisible(true);
    }//GEN-LAST:event_jButton_createDRActionPerformed

    private void jButton_createParkingActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_createParkingActionPerformed
    {//GEN-HEADEREND:event_jButton_createParkingActionPerformed
        // TODO add your handling code here:
        new JFrame_ParkingConstructor(this.session).setVisible(true);
    }//GEN-LAST:event_jButton_createParkingActionPerformed

    private void jButton_removeRequestsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_removeRequestsActionPerformed
    {//GEN-HEADEREND:event_jButton_removeRequestsActionPerformed
        if (jTable_requests.getSelectedRowCount() == 0 || JOptionPane.showConfirmDialog(
                this,
                "Are you sure that you want to delete "
                + jTable_requests.getSelectedRowCount() + " requests?",
                "Request deletion confirm",
                JOptionPane.YES_NO_OPTION) != 0)
        {
            return;
        }

        List<Object> res = new ArrayList();
        for (int i : jTable_requests.getSelectedRows())
        {
            res.add(jTable_requests.getValueAt(i, 1));
        }

        try
        {
            Utils.getUserService().deleteRequests(session, res);
            updateRequestTable();
        } catch (RemoteException | NotBoundException ex)
        {
            Logger.getLogger(JFrame_main.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton_removeRequestsActionPerformed

    private void jButton_createPRActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton_createPRActionPerformed
    {//GEN-HEADEREND:event_jButton_createPRActionPerformed
        new JFrame_PassengerRequestConstructor(this.session).setVisible(true);
    }//GEN-LAST:event_jButton_createPRActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_createDR;
    private javax.swing.JButton jButton_createPR;
    private javax.swing.JButton jButton_createParking;
    private javax.swing.JButton jButton_removeRequests;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_requests;
    // End of variables declaration//GEN-END:variables
}
